#!/usr/bin/env bash
# -ex:
# bail on errors and show debugging stuff
read -r -d '' HELP <<-'EOF'
HELP TEXT HERE

EOF

################################################################################
### TEMPFILES
# From:
#   http://stackoverflow.com/questions/430078/shell-script-templates
# create a default tmp file name
tmp=${TMPDIR:-/tmp}/prog.$$
export CTRL_PID=/var/run/mm/ctrl.pid
quit_mm_nicely() {
  echo "[`basename $0`] Got asked to quit"
  if [ -f $CTRL_PID ]; then
    the_pid=`cat $CTRL_PID`
    kill -10 $the_pid
    echo "sent kill signal to $the_pid"
    while [ -e /proc/$the_pid ]; do sleep 0.1; done
    echo "process $the_pid has stopped"
  fi
  rm -f $tmp.?
}
# delete any existing temp files
# trap "rm -f $tmp.?; exit 1" 0 1 2 3 13 15
# trip SIGUSR1 and quit nicely
trap 'quit_mm_nicely; exit 0' 1 2 3 13 15
# then do
#   ...real work that creates temp files $tmp.1, $tmp.2, ...

################################################################################
#### USAGE AND ERRORS
COMMAND=`basename $0`
# Load basic functions; primarily messaging functions
# Rename file name here to match actual functions
source "`dirname $0`/template-functions"

# Note that LOGFILE is used by functions for log commands: log_message,
# log_warning, log_error, etc.
#
# replace log file with another value if you want
LOGFILE=LOG_${COMMAND}_`tstamp`.log

usage() {
   echo "Usage: $cmd [ARGS..]"
}

print_help() {
  echo "$HELP"
}

################################################################################
### OPTIONS
while getopts "h" opt; do
  case $opt in
    h)
      usage
      print_help
      exit 1
      ;;
    \?)
      echo "ERROR Invalid option: -$OPTARG" >&2
      echo ""
      usage
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))


################################################################################
### THESCRIPT
echo $$
sleep 4

mm_count=1
mm_max=10
while [ $mm_count -le $mm_max ]; do
  message " `printf \"%-15s %2d/%d\" mm $mm_count $mm_max`"
  sleep 2

  message "Running mm-ingest-ctrl"
  ./`dirname $0`/mm-ingest-ctrl | tee $LOGFILE

  # message "Running mm-ingest-ctrl"
  # (./`dirname $0`/mm-ingest-ctrl & echo $! >&3 ) 3>$CTRL_PID | tee $LOGFILE
  # wait $(<$CTRL_PID)
  mm_count=$(($mm_count + 1))
done

################################################################################
### EXIT
# http://stackoverflow.com/questions/430078/shell-script-templates
rm -f $tmp.?
trap 0
exit 0

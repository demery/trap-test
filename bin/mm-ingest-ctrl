#!/usr/bin/env bash
# -ex:
# bail on errors and show debugging stuff
read -r -d '' HELP <<-'EOF'
HELP TEXT HERE

EOF

################################################################################
### TEMPFILES
# From:
#   http://stackoverflow.com/questions/430078/shell-script-templates
# create a default tmp file name
tmp=${TMPDIR:-/tmp}/prog.$$

quit_nicely(){
  echo "I got asked to quit: $$"
  sleep 2
  echo quitting
  if [ -n "$CTRL_PID" ]; then
    rm -f $CTRL_PID
  fi
}
# delete any existing temp files
trap "rm -f $tmp.?; exit 1" 0 1 2 3 13 15
trap "quit_nicely; rm -f $tmp.?; exit 0" 10
# then do
#   ...real work that creates temp files $tmp.1, $tmp.2, ...

################################################################################
#### USAGE AND ERRORS
COMMAND=`basename $0`
# Load basic functions; primarily messaging functions
# Rename file name here to match actual functions
source "`dirname $0`/template-functions"

# Note that LOGFILE is used by functions for log commands: log_message,
# log_warning, log_error, etc.
#
# replace log file with another value if you want
LOGFILE=LOG_${COMMAND}_`tstamp`.log

usage() {
   echo "Usage: $cmd [ARGS..]"
}

print_help() {
  echo "$HELP"
}

################################################################################
### OPTIONS
while getopts "h" opt; do
  case $opt in
    h)
      usage
      print_help
      exit 1
      ;;
    \?)
      echo "ERROR Invalid option: -$OPTARG" >&2
      echo ""
      usage
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))


################################################################################
### THESCRIPT

if [ -n "$CTRL_PID" ]; then
  message "Writing PID to $CTRL_PID"
  echo $$ > $CTRL_PID
else
  message "CTRL_PID not set"
fi

mic_count=1
mic_max=10
while [ $mic_count -le $mic_max ]; do
  message " `printf \"%-15s %2d/%d\" mm-ingest-ctrl $mic_count $mic_max`"
  sleep 4

  # message "Running mm-ingest-ctrl"
  # (./`dirname $0`/mm-ingest-ctrl & echo $! >&3 ) 3>$CTRL_PID | tee $LOGFILE
  # wait $(<$CTRL_PID)

  # message "Running mm-ingest-ctrl"
  # (./`dirname $0`/mm-ingest-ctrl & echo $! >&3 ) 3>$CTRL_PID | tee $LOGFILE
  # wait $(<$CTRL_PID)
  mic_count=$(($mic_count + 1))
done

if [ -n "$CTRL_PID" ]; then
  rm -f $CTRL_PID
fi


################################################################################
### EXIT
# http://stackoverflow.com/questions/430078/shell-script-templates
rm -f $tmp.?
trap 0
exit 0
